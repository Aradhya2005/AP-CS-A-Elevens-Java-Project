
Assertion: Boolean expressions that should be true if the program is running correctly. The Java
assert statement can be used to check assertions in a program.
class invariant: A logical statement relating to the values of the instance variables of a class that is
always true between calls to the class’s methods (also referred to as a “data invariant”).
(“Invariant” means “not varying” or “not changing.”)
client class: A class that uses another class (e.g., The Deck class is a client of the Card class.).
helper method: A method, usually private, that is called by another method. Helper methods are
used to simplify the calling method. They also facilitate code reuse when they provide a function
that can be used by more than one calling method.
loop invariant: A logical statement that is always true when execution reaches a loop’s termination
test.
model: A class with behaviors and state that represent key features of some “real-world” object or
process. We say that a class models the “real-world” object. For example, the Deck class models
a real deck of cards.
perfect shuffle: A card-shuffling method that starts with dividing the deck into two stacks, then
interleaving the cards, first a card from stack 1, then a card from stack 2, then another card from
stack 1, another from stack 2, and so on.
permutation: A rearrangement of a given sequence of values. There are six permutations of the
sequence [1,2,3], namely [1,2,3] (the “identity” permutation), [1,3,2], [2,1,3], [2,3,1], [3,1,2], and
[3,2,1]. If the given sequence contains duplicate values, so will its permutations. For example, the
permutations of [1,1,2] are [1,1,2], [1,2,1], and [2,1,1].
polymorphism: A process that Java uses where the method to execute is based on the object executing
the method. For example, if board.anotherPlayIsPossible() is executed, and
board references an ElevensBoard object, then the ElevensBoard
anotherPlayIsPossible method will be called.
probabilistic: Based on chance or involving the use of randomness.
pseudo-random number generator: A procedure that produces a sequence of values that passes
various statistical tests for randomness (e.g., any value is just as likely to occur in a given position
in the sequence as any other).
Glossary - 40 - Elevens Student Lab Guide
random number generator: See pseudo-random number generator.
refactor: Reorganizing code. One example of refactoring is creating helper methods to simplify code
or eliminate duplicate code. Another is splitting a class into a superclass and a subclass, putting
the code that would be common to other subclasses into the new superclass.
selection shuffle: A card-shuffling method that works similarly to the selection sort. It randomly
selects a card for each position in the deck from the remaining unselected cards.
shuffle: A method of permuting (mixing up) the cards in a deck. See perfect shuffle and selection
shuffle.
simulation: Imitation, using a computer program, of some real-world process. The “actors” in the
process correspond to objects and variables in the simulation, while the interactions between the
actors correspond to program methods.
systematic: Performed using a logical step-by-step process.
truncation: Removal of the fractional part of a real or double value, producing an integer
